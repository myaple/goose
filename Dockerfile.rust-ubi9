# Builder stage: build goose binary using Rust on UBI 9
FROM registry.access.redhat.com/ubi9/ubi as builder

# Install dependencies required for Rust building
RUN dnf module enable -y rust:1.87 && \
    dnf install -y rust cargo gcc make libdbus-devel && \
    dnf clean all

WORKDIR /usr/src/goose

# Copy project files
COPY . .

# Build release binary
RUN cargo build --release


# Runtime stage: UBI 9 minimal with required runtime libs
FROM registry.access.redhat.com/ubi9/ubi-minimal

# Install runtime libraries for DBus, keyring, SSL dependencies
RUN microdnf install -y \
    dbus \
    dbus-daemon \
    gnome-keyring \
    openssl-libs \
    libsecret \
    libxcb \
    ca-certificates \
    curl \
    && microdnf clean all

# Copy built goose binary from builder
COPY --from=builder /usr/src/goose/target/release/goose /usr/local/bin/goose

# Default entrypoint to run the goose binary
ENTRYPOINT ["/usr/local/bin/goose"]
